#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

#define DEFAULT 0
#define LWR 1
#define RSE 2
#define ADJ 3

/ {
    macros {
    };

    behaviors {
        hr: hr {
            compatible = "zmk,behavior-hold-tap";
            label = "HR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            flavor = "balanced";
            quick-tap-ms = <0>;
            hold-trigger-key-positions = <29 30 31 32 40 39 38 37>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp ESC         &kp N1              &kp N2          &kp N3           &kp N4            &kp N5     &kp PRINTSCREEN  &kp EQUAL     &kp N6   &kp N7             &kp N8          &kp N9          &kp N0                 &kp MINUS
&kp TAB         &kp Q               &kp W           &kp E            &kp R             &kp T      &kp BACKSLASH    &kp RBKT      &kp Y    &kp U              &kp I           &kp O           &kp P                  &kp LEFT_BRACKET
&kp CAPSLOCK    &hr LEFT_CONTROL A  &hr LEFT_ALT S  &hr LEFT_GUI D   &hr LEFT_SHIFT F  &kp G      &kp LPAR         &kp RPAR      &kp H    &hr RIGHT_SHIFT J  &hr LEFT_GUI K  &hr LEFT_ALT L  &hr LEFT_CONTROL SEMI  &kp SQT
&kp LEFT_SHIFT  &kp Z               &kp X           &kp C            &kp V             &kp B                                     &kp N    &kp M              &kp COMMA       &kp DOT         &kp FSLH               &kp LEFT_SHIFT
&kp LCTRL       &kp LGUI            &kp LEFT_ARROW  &kp RIGHT_ARROW                                                                                          &kp UP_ARROW    &kp DOWN        &kp BACKSLASH          &kp LEFT_ALT
                                                                     &mo 2             &kp SPACE                                 &kp RET  &mo 1
                                                                                       &kp LCTRL  &kp BACKSPACE    &kp LEFT_GUI  &kp DEL
                                                                                       &kp HOME   &kp TAB          &kp LALT      &kp END
            >;
        };

        lower_layer {
            bindings = <
&trans    &kp F1     &kp F2     &kp F3     &kp F4     &kp F5  &kp F6  &kp F7  &kp F8     &kp F9         &kp F10   &kp F11    &kp F12   &trans
&trans    &trans     &trans     &trans     &trans     &trans  &trans  &trans  &kp PG_UP  &kp PAGE_DOWN  &kp HOME  &kp END    &kp DEL   &trans
&kp CAPS  &kp LGUI   &kp LALT   &kp LSHFT  &kp LCTRL  &trans  &trans  &trans  &kp LEFT   &kp DOWN       &kp UP    &kp RIGHT  &kp BSPC  &trans
&trans    &kp LC(Z)  &kp LC(X)  &kp LC(C)  &kp LC(V)  &trans                  &kp INS    &trans         &trans    &trans     &trans    &trans
&trans    &trans     &trans     &trans                                                                  &trans    &trans     &trans    &trans
                                           &mo 3      &trans                  &trans     &trans
                                                      &trans  &trans  &trans  &trans
                                                      &trans  &trans  &trans  &trans
            >;
        };

        raise_layer {
            bindings = <
&kp GRAVE     &kp EXCL  &kp AT     &kp HASH   &kp DLLR   &kp PRCNT  &trans  &trans  &kp CARET        &kp AMPS   &kp ASTRK             &kp HASH               &kp PERCENT    &trans
&kp K_VOL_UP  &kp HOME  &kp PG_DN  &kp PG_UP  &kp END    &trans     &trans  &trans  &kp EXCLAMATION  &kp EQUAL  &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp PIPE       &kp K_VOL_UP
&kp K_VOL_DN  &kp LEFT  &kp DOWN   &kp UP     &kp RIGHT  &trans     &trans  &trans  &kp DOLLAR       &kp CARET  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp AT         &kp K_VOL_DN
&kp K_MUTE    &trans    &trans     &trans     &trans     &trans                     &kp AMPERSAND    &kp TILDE  &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp BACKSLASH  &kp K_MUTE
&trans        &trans    &trans     &trans                                                                       &trans                &trans                 &trans         &trans
                                              &trans     &trans                     &trans           &mo 3
                                                         &trans     &trans  &trans  &trans
                                                         &trans     &trans  &trans  &trans
            >;
        };

        adjust_layer {
            bindings = <
&out OUT_BLE  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none  &none       &none        &none  &none  &none  &none  &none
&out OUT_USB  &none         &none         &none         &sys_reset    &none         &none  &none       &none        &none  &none  &none  &none  &none
&none         &none         &none         &none         &bt BT_NXT    &none         &none  &none       &none        &none  &none  &none  &none  &none
&bt BT_CLR    &none         &none         &none         &none         &bootloader                      &bootloader  &none  &none  &none  &none  &none
&none         &none         &none         &none                                                                            &none  &none  &none  &none
                                                        &none         &none                            &none        &none
                                                                      &none         &none  &none       &none
                                                                      &none         &none  &bt BT_NXT  &none
            >;
        };
    };
};
